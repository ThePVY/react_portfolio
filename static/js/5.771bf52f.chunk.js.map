{"version":3,"sources":["hooks/useValidation.js","scripts/validates.js","components/common/CustomFields/CustomFields.js","components/common/CustomFields/CustomFields.module.css","images/user-image.png","components/common/SplitContent/SplitContent.jsx","components/common/SplitContent/SplitContent.module.css","components/Content/Profile/ProfileInfo/ProfileInfo.module.css","components/Content/Profile/ProfileInfo/Ava/Ava.module.css","components/Content/Profile/ProfileInfo/AboutMe/AboutMe.module.css","components/Content/Profile/ProfileInfo/Contacts/Contacts.module.css","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Content/Profile/Posts/Posts.module.css","components/Content/Profile/Posts/Post/Post.module.css","components/common/Hover/Hover.module.css","components/Content/Profile/ProfileInfo/Ava/Ava.jsx","components/Content/Profile/ProfileInfo/AboutMe/AboutMe.jsx","components/Content/Profile/ProfileInfo/Contacts/Contacts.jsx","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","scripts/makeSlideContent.js","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/common/Hover/Hover.jsx","components/Content/Profile/Posts/Post/Post.jsx","components/Content/Profile/Posts/Posts.jsx","components/Content/Profile/Profile.jsx"],"names":["useValidation","initialValue","useState","isValid","innerSetIsValid","setIsValid","useCallback","valid","validateLengthCreator","maxLength","value","length","undefined","validate500","validate100","validate50","validateNum","str","search","required","noErrorRequired","createField","component","name","type","placeholder","validate","text","className","s","container","FieldTemplate","notification","meta","notified","children","a","touched","error","useEffect","Textarea","props","input","Input","module","exports","SplitContent","left","right","colorLeft","colorRight","content","leftPane","colored","rightPane","Ava","photos","styles","ava","small","src","alt","defaultUserImage","AboutMe","aboutMe","header","Contacts","contacts","Object","keys","reduce","acc","key","i","href","validateURL","Preloader","isFetching","withRouter","status","publishStatus","authId","match","params","userId","editMode","setEditMode","toggleMode","e","profileStatus","onSubmit","cancel","statusContainer","onClick","StatusForm","dispatch","handleSubmit","statusVO","change","statusForm","Field","autoFocus","buttonsContainer","disabled","reduxForm","form","makeSlideContent","window","addEventListener","scrollListener","top2container","topBoundary","bottomBoundary","isStick","prevOffset","currOffset","prevScroll","currScroll","setPositioning","position","top","stick","style","changedDirectionMidway","changedDirection","getBoundingClientRect","pageYOffset","offsetHeight","botBoundary","innerHeight","checkRange","offsetTop","contentOffset","isOverContainer","ProfileInfo","data","psProps","document","querySelector","profileInfo","listener","removeEventListener","fullName","takePlace","Hover","base","hovered","clickMode","setClickMode","hoverContainer","onMouseOut","setTimeout","onMouseOver","Post","iam","deletePost","avaSrc","defaultImage","post","centered","like","state","likesCount","messageContainer","message","delete","Posts","userName","addPost","resetForm","posts","postsContainer","map","obj","id","reverse","PostForm","postVO","compose","connect","selecror","profile","getPhotos","getUserName","getPosts","auth","getAuthId","getUserId","getData","getStatus","thunkCreator","actionCreator","getProfileData","getProfileStatus","console","log","putProfileStatus"],"mappings":"8KAGaA,EAAgB,SAAAC,GAAiB,IAAD,EACNC,mBAASD,GADH,mBAClCE,EADkC,KACzBC,EADyB,KAKzC,MAAO,CAAE,CAAED,UAASE,WAFDC,uBAAY,eAACC,EAAD,+DAAmBH,EAAgBG,KAAQ,KAExC,kBAAMH,GAAgB,O,iCCN5D,gNAAMI,EAAwB,SAAAC,GAAS,OAAI,WAAiB,IAAhBC,EAAe,uDAAP,GAChD,OAAOA,EAAMC,OAASF,OAAYG,EAA3B,4BAA4DH,EAA5D,cAGEI,EAAcL,EAAsB,KAEpCM,EAAcN,EAAsB,KAEpCO,EAAaP,EAAsB,IAInCQ,GAFaR,EAAsB,IAErB,WAAe,IAAdS,EAAa,uDAAP,GAC9B,OAAQA,EAAIC,OAAO,UAAY,sBAAmBN,IAGzCO,EAAW,SAAAT,GAAK,OAAIA,OAAQE,EAAY,0BAGxCQ,EAAkB,SAAAV,GAAK,OAAIA,OAAQE,EAAY,CAAC,M,oMChBhDS,EAAc,SAACC,EAAWC,EAAMC,EAAMC,EAAaC,EAAUvB,GAAwB,IAAfwB,EAAc,uDAAP,GACtF,OACI,sBAAKC,UAAWC,IAAEC,UAAlB,UACI,cAAC,IAAD,CACIR,UAAWA,EAAWC,KAAMA,EAAMC,KAAMA,EAAMC,YAAaA,EAC3DC,SAAUA,EAAUvB,QAASA,IAEhCwB,MAMAI,EAAgB,SAAC,GAAoD,IAE1EC,EAFwBC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,SAAiC,IAAvBhC,eAAuB,MAAb,SAAAiC,GAAC,OAAIA,GAAQ,EAIzEJ,EADDC,EAAKI,SAAWH,GACAD,EAAKK,MAAQL,EAAKK,MAGlB,GAP0D,IAUrE/B,EAAU0B,EAAV1B,MAKR,OAJAgC,qBAAU,WACNpC,EAAQI,KACV,CAACA,EAAOJ,IAGN,qCACKgC,EACD,sBAAMP,UAAWK,EAAK1B,MAAQ,GAAKsB,IAAES,MAArC,SAA6CN,QAK5CQ,EAAW,SAAC,GAAmC,IAAlChB,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAgBgB,EAAW,sCACvD,OACI,cAACV,EAAD,2BAAmBU,GAAnB,IAA0BP,UAAU,EAApC,SACI,oDAAcO,EAAMC,OAApB,IAA2BjB,YAAaA,EAAaD,KAAMA,SAK1DmB,EAAQ,SAAC,GAAmC,IAAlCnB,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAgBgB,EAAW,sCACpD,OACI,cAACV,EAAD,2BAAmBU,GAAnB,IAA0BP,UAAU,EAApC,SACI,iDAAWO,EAAMC,OAAjB,IAAwBjB,YAAaA,EAAaD,KAAMA,U,oBCnDpEoB,EAAOC,QAAU,CAAC,MAAQ,8B,iCCDX,QAA0B,wC,iCCAzC,6BAeeC,IAbM,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,MAAmD,IAA5CC,iBAA4C,aAAzBC,kBAAyB,SAC7E,OACI,sBAAKtB,UAAWC,IAAEsB,QAAlB,UACI,qBAAKvB,UAAWC,IAAEuB,UAAYH,GAAS,WAAQpB,IAAEwB,UAAjD,SACKN,IAEL,qBAAKnB,UAAWC,IAAEyB,WAAaJ,GAAU,WAAQrB,IAAEwB,UAAnD,SACKL,S,oBCRjBJ,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,+BAA+B,UAAY,gCAAgC,QAAU,gC,0CCA1JD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,QAAU,6BAA6B,UAAY,iC,oBCApHD,EAAOC,QAAU,CAAC,IAAM,mB,oBCAxBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,0B,oBCA3FD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,2B,oBCAjED,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,WAAa,kCAAkC,iBAAmB,wCAAwC,gBAAkB,yC,oBCAnMD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,SAAW,wBAAwB,eAAiB,gC,oBCAnGD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,iBAAmB,+BAA+B,QAAU,sBAAsB,KAAO,mBAAmB,OAAS,uB,oBCAnMD,EAAOC,QAAU,CAAC,eAAiB,gC,wICYpBU,EAVH,SAAC,GAAqB,IAAD,IAAlBC,cAAkB,MAAT,GAAS,EAC7B,OACI,qBAAK5B,UAAW6B,IAAOC,IAAvB,SAEQF,EAAOG,MAAO,qBAAKC,IAAKJ,EAAOG,MAAOE,IAAI,KAAQ,qBAAKD,IAAKE,IAAkBD,IAAI,Q,kBCWnFE,EAhBC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASzC,EAAW,EAAXA,KACxB,OACI,sBAAKK,UAAW6B,IAAOO,QAAvB,UACI,qBAAKpC,UAAW6B,IAAOlC,KAAvB,SACI,+BAAOA,MAEX,8BACI,sBAAMK,UAAW6B,IAAOQ,OAAxB,wBAGAD,M,kCCcDE,EAtBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAKA,EAID,sBAAKvC,UAAW6B,IAAOU,SAAvB,UACI,8BACI,sBAAMvC,UAAW6B,IAAOQ,OAAxB,wBAEJ,8BACI,6BAEQG,OAAOC,KAAKF,GAAUG,QAAO,SAACC,EAAKC,EAAKC,GAAX,OACzBN,EAASK,GAAO,CAACD,EAAK,+BAAaC,EAAb,MAAoB,mBAAGE,KAAMC,YAAYR,EAASK,IAA9B,SAAsCL,EAASK,OAA1DC,IAA4EF,IAC7G,WAZX,cAACK,EAAA,EAAD,CAAWC,YAAY,K,8FCmCvBC,eAhCO,SAACrC,GAAW,IAAD,EAE8BA,EAAnDsC,cAFqB,MAEZ,eAFY,EAEIC,EAA0BvC,EAA1BuC,cAAeC,EAAWxC,EAAXwC,OAFnB,EAGDxC,EAAMyC,MAAMC,OAAhCC,cAHqB,MAGZH,EAHY,IAKG/E,oBAAS,GALZ,mBAKtBmF,EALsB,KAKZC,EALY,KAOvBC,EAAa,SAAAC,GACXP,IAAWG,GACXE,GAAaD,IASrB,OACI,qBAAKzD,UAAW6B,IAAOgC,cAAvB,SAEQJ,EACI,cAAC,EAAD,CAAYK,SATZ,SAAC,GAAgB,IAAdX,EAAa,EAAbA,OACfC,EAAcD,GACdO,GAAY,IAO+BK,OAAQJ,EAAYR,OAAQA,IAE3D,qBAAKnD,UAAW6B,IAAOmC,gBAAvB,SACI,sBAAMC,QAASN,EAAf,SAA6BR,WAWjDe,EAAa,SAAArD,GAAU,IAEfsD,EAA2CtD,EAA3CsD,SAAUhB,EAAiCtC,EAAjCsC,OAAQiB,EAAyBvD,EAAzBuD,aAAcL,EAAWlD,EAAXkD,OAFlB,EAIC3F,aAAc,GAA7BiG,EAJc,oBAUtB,OAJA1D,qBAAU,WACNwD,EAASG,YAAO,SAAU,SAAUnB,MACrC,CAACA,EAAQgB,IAGR,uBAAMnE,UAAW6B,IAAO0C,WAAYT,SAAUM,EAA9C,UACI,8BACI,cAACI,EAAA,EAAD,CAAO9E,UAAWkB,IAAUjB,KAAK,SAASC,KAAK,OAAO6E,WAAW,EAAM5E,YAAY,oBAC/EC,SAAU,CAACN,IAAiBL,KAAaZ,QAAS8F,EAAS5F,eAEnE,sBAAKuB,UAAW6B,IAAO6C,iBAAvB,UACI,wBAAQ9E,KAAK,SAAS+E,UAAWN,EAAS9F,QAA1C,qBACA,wBAAQqB,KAAK,SAASqE,QAASF,EAA/B,2BAMhBG,EAAaU,YAAU,CAAEC,KAAM,UAAlBD,CAA8BV,GCrE3C,IAoGeY,EApGU,SAACvD,EAASrB,GAE/B6E,OAAOC,iBAAiB,SAAUC,GAElC,IAKIC,EACAC,EACAC,EAPAC,GAAU,EAETC,EAA2B,GAAfC,EAAmB,GAC/BC,EAA2B,GAAfC,EAAmB,GAgB9BC,EAAiB,SAACC,EAAUC,EAAKC,GACnCtE,EAAQuE,MAAMH,SAAWA,EACzBpE,EAAQuE,MAAMF,IAAMA,EACpBP,EAAUQ,GAcRE,EAAyB,kBAAOV,GAAWI,IAAeD,GAE1DQ,EAAmB,kBAAMX,GAAWI,IAAeD,GAIzD,SAASP,IAOL,GALAC,EAAgBhF,EAAU+F,wBAAwBL,IAAMb,OAAOmB,YAE/Dd,GADAD,EAAcD,GACiBhF,EAAUiG,aArB1B,SAAChB,EAAaiB,GAE7B,OADgBA,EAAcrB,OAAOmB,YAAcnB,OAAOsB,aAAgBlB,EAAcJ,OAAOmB,YAsBrFI,CAAWnB,EAAaC,IACnB7D,EAAQ4E,aAAepB,OAAOsB,YAAa,CAEtD,IADAd,EAAaR,OAAOmB,aACHZ,EAAY,CAGzB,GADAG,EAAa,QArBWJ,GAAWE,EAAaR,OAAOsB,aAAe9E,EAAQgF,UAAYhF,EAAQ4E,aAsBtE,CACxB,IAAMK,EAAa,WAAOjF,EAAQ4E,aAAepB,OAAOsB,YAArC,MACnBX,EAAe,SAAUc,GAAe,QAEvC,GAAIT,IAA0B,CAC/B,IAAMS,EAAa,UAAMjF,EAAQgF,UAAYrB,EAA1B,MACnBQ,EAAe,WAAYc,GAAe,QAEzC,GAAIR,IAAoB,CACzB,IAAMQ,EAAa,UAAMjB,EAAaL,EAAnB,MACnBQ,EAAe,WAAYc,GAAe,GAE9ChB,EAAa,WAEZ,CAGD,GADAC,EAAa,MApCQJ,GAAWE,GAAchE,EAAQgF,UAsClDb,EAAe,SAAD,OAAkB,QAE/B,GAAIK,IACLL,EAAe,WAAD,UAAgBnE,EAAQgF,UAAYrB,EAApC,OAAuD,QAEpE,GAAIc,IAAoB,CACzB,IAAMQ,EAAa,UAAMjB,EAAahE,EAAQ4E,aAAepB,OAAOsB,YAAcnB,EAA/D,MACnBQ,EAAe,WAAYc,GAAe,GAE9ChB,EAAa,KAEjBF,EAAaC,OArDShE,EAAQ4E,aAAepB,OAAOsB,YAwDpDX,EAAe,SAAD,OAAkB,IA5Ede,EA+ED1B,OAAOmB,YAAchB,EA9E1CG,GAAU,EACV9D,EAAQuE,MAAMH,SAAW,WAErBpE,EAAQuE,MAAMF,IADlBa,EACI,MAEA,UAAuBlB,EAAahE,EAAQ4E,aAAepB,OAAOsB,YAAcnB,EAAhF,OANiB,IAACuB,EAmF1B,OAAOxB,GC/CIyB,EA1CK,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMxD,EAA4C,EAA5CA,OAAQE,EAAoC,EAApCA,OAAQG,EAA4B,EAA5BA,OAEnCoD,EAAU,CAAEzD,SAAQC,cAF2C,EAApBA,cAERC,SAAQG,UAWjD,OATA7C,qBAAU,WACN,IAAMT,EAAY2G,SAASC,cAAT,WAA2B7G,IAAE8G,cACzCxF,EAAUsF,SAASC,cAAT,WAA2B7G,IAAEsB,UACvC0D,EAAiBH,EAAiBvD,EAASrB,GACjD,OAAO,WDsFqB,IAAC8G,ICrFJ/B,EDsF7BF,OAAOkC,oBAAoB,SAAUD,MCpFlC,IAGC,qBAAKhH,UAAWC,IAAE8G,YAAlB,SACI,sBAAK/G,UAAWC,IAAEsB,QAAlB,UACI,cAAC,EAAD,CAAKK,OAAQ+E,EAAK/E,SAClB,cAAC,EAAD,eAAmBgF,IACnB,cAAC,EAAD,CAASxE,QAASuE,EAAKvE,QAASzC,KAAMgH,EAAKO,WAC3C,cAAC,EAAD,CAAU3E,SAAUoE,EAAKpE,WACzB,yCAGA,wCAGA,wCAIA,qBAAKvC,UAAWC,IAAEkH,UAAlB,4BACA,qBAAKnH,UAAWC,IAAEkH,UAAlB,4BACA,qBAAKnH,UAAWC,IAAEkH,UAAlB,4BACA,qBAAKnH,UAAWC,IAAEkH,UAAlB,4BACA,qBAAKnH,UAAWC,IAAEkH,UAAlB,4BACA,qBAAKnH,UAAWC,IAAEkH,UAAlB,kC,+DCdDC,EA1BD,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASxB,EAAqB,EAArBA,MAAO7B,EAAc,EAAdA,QAAc,EAEf3F,oBAAS,GAFM,mBAE1CiJ,EAF0C,KAE/BC,EAF+B,KAUjD,OACI,qBAAKxH,UAAWC,IAAEwH,eAAlB,SAEQF,EACI,sBAAMvH,UAAW8F,EAAO7B,QAASA,EAASyD,WAVzC,WACbC,YAAW,kBAAMH,GAAa,KAAQ,MAS1B,SACKF,IAGL,sBAAMtH,UAAW8F,EAAO8B,YAVtB,kBAAMJ,GAAa,IAUrB,SACKH,OCeVQ,EAhCF,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,IAA6C,IAAxClG,cAAwC,MAA/B,GAA+B,EAA3BmG,EAA2B,EAA3BA,WAAelH,EAAY,6CAEnDmH,EAASpG,EAAOG,MAAQH,EAAOG,MAAQkG,IAE7C,OACI,qCACI,sBAAKjI,UAAWC,IAAEiI,KAAlB,UACI,sBAAKlI,UAAWC,IAAEkI,SAAlB,UACI,qBAAKnG,IAAKgG,EAAQ/F,IAAI,MACtB,gCACI,sBAAMjC,UAAWC,IAAEmI,KAAnB,kBADJ,IAC0CvH,EAAMwH,MAAMC,iBAG1D,qBAAKtI,UAAWC,IAAEsI,iBAAlB,SACI,sBAAMvI,UAAS,UAAKC,IAAEuI,QAAP,YAAkBvI,IAAEkI,UAAnC,SACKtH,EAAMwH,MAAMG,eAIzB,8BAEQV,GACA,cAAC,EAAD,CAAOhC,MAAO7F,IAAEwI,OAAQxE,QAAS8D,EAC7BV,KAAM,gBACNC,QAAS,sBCSlBoB,EA/BD,SAAC,GAAiG,IAAD,IAA9FC,gBAA8F,MAAnF,MAAmF,EAA5E/G,EAA4E,EAA5EA,OAA4E,IAApEkG,WAAoE,SAAvDc,EAAuD,EAAvDA,QAASb,EAA8C,EAA9CA,WAAYc,EAAkC,EAAlCA,UAAoBC,EAAc,EAAvBA,MAASA,MAO7F,OACI,sBAAK9I,UAAWC,IAAE6I,MAAlB,UACI,qBAAK9I,UAAWC,IAAEkI,SAAlB,SAEQL,EACI,cAAC,EAAD,CAAUhE,SAVT,SAAC,GAAc,IAAZoE,EAAW,EAAXA,KACpBU,EAAQV,GACRW,EAAU,WAUM,6CAAiBF,EAAjB,SAGZ,qBAAK3I,UAAS,UAAKC,IAAE8I,eAAP,YAAyB9I,IAAEkI,UAAzC,SAEQW,EAAME,KAAI,SAACC,GAIP,OAAO,cAAC,EAAD,CAAmBnB,IAAKA,EAAKO,MAAOY,EAAKrH,OAAQA,EAAQmG,WAH3C,WACjBA,EAAWkB,EAAIC,MAEDD,EAAIC,OACvBC,gBAWnBC,EAAW,SAAAvI,GAAU,IAAD,EAECzC,aAAc,GAA3BiL,EAFY,oBAIpB,OACI,uBAAMvF,SAAUjD,EAAMuD,aAAtB,UACK3E,YAAYmB,IAAU,OAAQ,OAAQ,kBAAmB,CAACpB,IAAiBP,KAAcoK,EAAO5K,YACjG,8BACI,wBAAQmB,KAAK,SAAS+E,UAAW0E,EAAO9K,QAAxC,4BAMhB6K,EAAWxE,YAAU,CAAEC,KAAM,QAAlBD,CAA4BwE,G,6BCDxBE,sBACXC,aAdoB,SAAClB,GACrB,MAAO,CACHzG,OAAQ4H,IAASC,QAAQC,UAAUrB,GACnCM,SAAUa,IAASC,QAAQE,YAAYtB,GACvCS,MAAOU,IAASC,QAAQG,SAASvB,GACjChF,OAAQmG,IAASK,KAAKC,UAAUzB,GAChC7E,OAAQgG,IAASC,QAAQM,UAAU1B,GAEnC1B,KAAM6C,IAASC,QAAQO,QAAQ3B,GAC/BlF,OAAQqG,IAASC,QAAQQ,UAAU5B,MAKhC,YAAC,2BAAsB6B,KAAiBC,IAAcrB,OAAtD,IAA6DD,iBACpE3F,IAFWoG,EA1CC,SAACzI,GAAW,IAEhBwC,EAA6CxC,EAA7CwC,OAAQ+G,EAAqCvJ,EAArCuJ,eAAgBC,EAAqBxJ,EAArBwJ,iBAFT,EAGKxJ,EAAMyC,MAAMC,OAAhCC,cAHe,MAGNH,EAHM,EAKvB1C,qBAAU,WACN0J,EAAiB7G,GACjB4G,EAAe5G,GACf8G,QAAQC,IAAI,oCACb,CAAClH,EAAQG,EAAQ4G,EAAgBC,IAQpC,OACI,cAACnJ,EAAA,EAAD,CAAcG,WAAW,EAAMC,YAAY,EACvCH,KACI,cAAC,EAAD,2BAAiBN,GAAjB,IAAwBuC,cATd,SAAAD,GAAW,IACrBqH,EAAgC3J,EAAhC2J,iBAAkB3B,EAAchI,EAAdgI,UAC1B2B,EAAiB,CAAErH,WACnB0F,EAAU,cAQNzH,MACI,cAAC,EAAD,2BAAWP,GAAX,IAAkBiH,MAAQzE,GAAUG,IAAWH","file":"static/js/5.771bf52f.chunk.js","sourcesContent":["import { useCallback, useState } from \"react\"\r\n\r\n\r\nexport const useValidation = initialValue => {\r\n    const [isValid, innerSetIsValid] = useState(initialValue)\r\n\r\n    const setIsValid = useCallback((valid = false) => innerSetIsValid(valid), [])\r\n\r\n    return [ { isValid, setIsValid }, () => innerSetIsValid(false) ]\r\n}\r\n","\r\n\r\nconst validateLengthCreator = maxLength => (value = '') => {\r\n    return value.length < maxLength ? undefined : `Maximum length is ${maxLength} symbols`;\r\n}\r\n\r\nexport const validate500 = validateLengthCreator(500)\r\n\r\nexport const validate100 = validateLengthCreator(100)\r\n\r\nexport const validate50 = validateLengthCreator(50)\r\n\r\nexport const validate10 = validateLengthCreator(10)\r\n\r\nexport const validateNum = (str = '') => {\r\n    return ~str.search(/[^0-9]/) ? 'Enter a number' : undefined\r\n}\r\n\r\nexport const required = value => value ? undefined : 'This Field is required'\r\n\r\n//Обязательно вернуть массив, обычная пустая строка не работает\r\nexport const noErrorRequired = value => value ? undefined : ['']\r\n\r\n","import { useEffect } from 'react'\r\nimport { Field } from 'redux-form'\r\nimport s from './CustomFields.module.css'\r\n\r\n\r\nexport const createField = (component, name, type, placeholder, validate, isValid, text = '') => {\r\n    return (\r\n        <div className={s.container}>\r\n            <Field \r\n                component={component} name={name} type={type} placeholder={placeholder}\r\n                validate={validate} isValid={isValid} \r\n            />\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const FieldTemplate = ({ meta, notified, children, isValid = a => a }) => {\r\n    \r\n    let notification\r\n    if(meta.touched && notified) {\r\n        notification = meta.error ? meta.error : ''\r\n    }\r\n    else {\r\n        notification = ''\r\n    }\r\n\r\n    const { valid } = meta\r\n    useEffect(() => {\r\n        isValid(valid)\r\n    },[valid, isValid])\r\n    \r\n    return (\r\n        <>\r\n            {children}\r\n            <span className={meta.valid ? '' : s.error}>{notification}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({type, placeholder, ...props}) => {\r\n    return (\r\n        <FieldTemplate {...props} notified={true}>\r\n            <textarea {...props.input} placeholder={placeholder} type={type} />\r\n        </FieldTemplate>\r\n    )\r\n}\r\n\r\nexport const Input = ({type, placeholder, ...props}) => {\r\n    return (\r\n        <FieldTemplate {...props} notified={true} >\r\n            <input {...props.input} placeholder={placeholder} type={type} />\r\n        </FieldTemplate>\r\n    )\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"CustomFields_error__1fyZd\"};","export default __webpack_public_path__ + \"static/media/user-image.ab7efdc7.png\";","import s from './SplitContent.module.css'\r\n\r\nconst SplitContent = ({ left, right, colorLeft = false, colorRight = false }) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.leftPane + (colorLeft && ` ${s.colored}`)} >\r\n                {left}\r\n            </div>\r\n            <div className={s.rightPane + (colorRight && ` ${s.colored}`)} >\r\n                {right}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SplitContent\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SplitContent_content__1Hi9U\",\"leftPane\":\"SplitContent_leftPane__1ke3F\",\"rightPane\":\"SplitContent_rightPane__1k-FK\",\"colored\":\"SplitContent_colored__G2NlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__pRKBL\",\"content\":\"ProfileInfo_content__1nTLY\",\"takePlace\":\"ProfileInfo_takePlace__2HCDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Ava_ava__1Z4xG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe\":\"AboutMe_aboutMe__1XD7N\",\"name\":\"AboutMe_name__okbt0\",\"header\":\"AboutMe_header__1_jyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__1A1xz\",\"header\":\"Contacts_header__1YDQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__270Af\",\"statusForm\":\"ProfileStatus_statusForm__1NpMw\",\"buttonsContainer\":\"ProfileStatus_buttonsContainer__34QNr\",\"statusContainer\":\"ProfileStatus_statusContainer__1h7rd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__aT9Ec\",\"centered\":\"Posts_centered__3irDu\",\"postsContainer\":\"Posts_postsContainer__KNZDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1Xrim\",\"centered\":\"Post_centered__QmU_F\",\"messageContainer\":\"Post_messageContainer__Jx2jA\",\"message\":\"Post_message__2fD_Q\",\"like\":\"Post_like__2pVpl\",\"delete\":\"Post_delete__3gtes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hoverContainer\":\"Hover_hoverContainer__1XwGl\"};","import styles from './Ava.module.css'\r\nimport defaultUserImage from '../../../../../images/user-image.png'\r\n\r\nconst Ava = ({ photos = {} }) => {\r\n    return (\r\n        <div className={styles.ava}>\r\n            {\r\n                photos.small? <img src={photos.small} alt='' /> : <img src={defaultUserImage} alt='' />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Ava;","import styles from './AboutMe.module.css'\r\n\r\nconst AboutMe = ({ aboutMe, name }) => {\r\n    return (\r\n        <div className={styles.aboutMe}>\r\n            <div className={styles.name}>\r\n                <span>{name}</span>\r\n            </div>\r\n            <div>\r\n                <span className={styles.header}>About Me</span>\r\n            </div>\r\n            {\r\n                aboutMe\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutMe;","import { validateURL } from '../../../../../scripts/scripts';\r\nimport Preloader from '../../../../common/Preloader';\r\nimport styles from './Contacts.module.css'\r\n\r\nconst Contacts = ({ contacts }) => {\r\n    if( !contacts ) {\r\n        return <Preloader isFetching={true} />\r\n    }\r\n    return (\r\n        <div className={styles.contacts}>\r\n            <div>\r\n                <span className={styles.header}>Contacts</span> \r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        Object.keys(contacts).reduce((acc, key, i) => \r\n                            contacts[key] ? [acc, <li key={i}>{key} - <a href={validateURL(contacts[key])}>{contacts[key]}</a></li>] : acc\r\n                        , [])\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;","import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { change, Field, reduxForm } from 'redux-form';\r\nimport { useValidation } from '../../../../../hooks/useValidation';\r\nimport { noErrorRequired, validate50 } from '../../../../../scripts/validates';\r\nimport { Textarea } from '../../../../common/CustomFields/CustomFields';\r\nimport styles from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const { status = 'No status...', publishStatus, authId } = props\r\n    const { userId = authId } = props.match.params\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const toggleMode = e => {\r\n        if (authId === userId) {\r\n            setEditMode(!editMode)\r\n        }\r\n    }\r\n\r\n    const publish = ({ status }) => {\r\n        publishStatus(status)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.profileStatus}>\r\n            {\r\n                editMode ?\r\n                    <StatusForm onSubmit={publish} cancel={toggleMode} status={status} />\r\n                    :\r\n                    <div className={styles.statusContainer}>\r\n                        <span onClick={toggleMode} >{status}</span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(ProfileStatus);\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\nlet StatusForm = props => {\r\n\r\n    const { dispatch, status, handleSubmit, cancel } = props\r\n\r\n    const [ statusVO,  ] = useValidation(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(change('status', 'status', status))\r\n    }, [status, dispatch])\r\n\r\n    return (\r\n        <form className={styles.statusForm} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='status' type='text' autoFocus={true} placeholder='Enter your Status'\r\n                    validate={[noErrorRequired, validate50]} isValid={statusVO.setIsValid} />\r\n            </div>\r\n            <div className={styles.buttonsContainer}>\r\n                <button type='submit' disabled={!statusVO.isValid} >Publish</button>\r\n                <button type='button' onClick={cancel} >Cancel</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nStatusForm = reduxForm({ form: 'status' })(StatusForm)\r\n","const makeSlideContent = (content, container) => {\r\n\r\n    window.addEventListener('scroll', scrollListener)\r\n\r\n    let isStick = false\r\n    let inRange = false\r\n    let [prevOffset, currOffset] = ['', '']\r\n    let [prevScroll, currScroll] = ['', '']\r\n\r\n    let top2container\r\n    let topBoundary\r\n    let bottomBoundary\r\n\r\n\r\n    const resetPositioning = (isOverContainer) => {\r\n        isStick = false\r\n        content.style.position = 'relative'\r\n        isOverContainer ?\r\n            content.style.top = `0px`\r\n            :\r\n            content.style.top = `${currOffset - content.offsetHeight + window.innerHeight - top2container}px`\r\n    }\r\n\r\n    const setPositioning = (position, top, stick) => {\r\n        content.style.position = position\r\n        content.style.top = top\r\n        isStick = stick\r\n    }\r\n\r\n    const checkRange = (topBoundary, botBoundary) => {\r\n        let inRange = ((botBoundary > window.pageYOffset + window.innerHeight) && topBoundary < window.pageYOffset) ? true : false\r\n        return inRange\r\n    }\r\n\r\n    const contentTooSmall = () => content.offsetHeight < window.innerHeight\r\n\r\n    const reachedContentBottom = () => !isStick && currOffset + window.innerHeight >= content.offsetTop + content.offsetHeight\r\n\r\n    const reachedContentTop = () => !isStick && currOffset <= content.offsetTop\r\n\r\n    const changedDirectionMidway = () => !isStick && currScroll !== prevScroll\r\n\r\n    const changedDirection = () => isStick && currScroll !== prevScroll\r\n\r\n    /*-----------------------------------------------------------------------------------------------*/\r\n\r\n    function scrollListener() {\r\n        //need to calculate every scroll to catch window resizing\r\n        top2container = container.getBoundingClientRect().top + window.pageYOffset //Frop page top to top of the sticky container\r\n        topBoundary = top2container\r\n        bottomBoundary = topBoundary + container.offsetHeight\r\n\r\n        inRange = checkRange(topBoundary, bottomBoundary)\r\n        if (inRange && content.offsetHeight > window.innerHeight) {\r\n            currOffset = window.pageYOffset\r\n            if (currOffset > prevOffset) {\r\n                //scrolling down\r\n                currScroll = 'down'\r\n                if (reachedContentBottom()) {\r\n                    const contentOffset = `-${content.offsetHeight - window.innerHeight}px`\r\n                    setPositioning('sticky', contentOffset, true)\r\n                }\r\n                else if (changedDirectionMidway()) {\r\n                    const contentOffset = `${content.offsetTop - top2container}px`\r\n                    setPositioning('relative', contentOffset, false)\r\n                }\r\n                else if (changedDirection()) {\r\n                    const contentOffset = `${currOffset - top2container}px`\r\n                    setPositioning('relative', contentOffset, false)\r\n                }\r\n                prevScroll = 'down'\r\n            }\r\n            else {\r\n                //scrolling up\r\n                currScroll = 'up'\r\n                if (reachedContentTop()) {\r\n                    setPositioning('sticky', `0px`, true)\r\n                }\r\n                else if (changedDirectionMidway()) {\r\n                    setPositioning('relative', `${content.offsetTop - top2container}px`, false)\r\n                }\r\n                else if (changedDirection()) {\r\n                    const contentOffset = `${currOffset - content.offsetHeight + window.innerHeight - top2container}px`\r\n                    setPositioning('relative', contentOffset, false)\r\n                }\r\n                prevScroll = 'up'\r\n            }\r\n            prevOffset = currOffset\r\n        }\r\n        else if (contentTooSmall()) {\r\n            setPositioning('sticky', `0px`, true)\r\n        }\r\n        else {\r\n            resetPositioning(window.pageYOffset < top2container)\r\n        }\r\n    }\r\n\r\n    return scrollListener\r\n}\r\n\r\nexport default makeSlideContent\r\n\r\nexport const removeScrollListener = (listener) => {\r\n    window.removeEventListener('scroll', listener)\r\n}\r\n\r\n\r\n/*-----------------------------------------------------------------------------------------------*/","import s from './ProfileInfo.module.css'\r\nimport Ava from './Ava/Ava'\r\nimport AboutMe from './AboutMe/AboutMe'\r\nimport Contacts from './Contacts/Contacts'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport { useEffect } from 'react';\r\nimport makeSlideContent, { removeScrollListener } from '../../../../scripts/makeSlideContent';\r\n\r\nconst ProfileInfo = ({ data, status, authId, userId, publishStatus }) => {\r\n\r\n    const psProps = { status, publishStatus, authId, userId }\r\n\r\n    useEffect(() => {\r\n        const container = document.querySelector(`.${s.profileInfo}`)\r\n        const content = document.querySelector(`.${s.content}`)\r\n        const scrollListener = makeSlideContent(content, container)\r\n        return () => {\r\n            removeScrollListener(scrollListener)\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.content}>\r\n                <Ava photos={data.photos} />\r\n                <ProfileStatus {...psProps} />\r\n                <AboutMe aboutMe={data.aboutMe} name={data.fullName}/>\r\n                <Contacts contacts={data.contacts} />\r\n                <div>\r\n                    Images\r\n                </div>\r\n                <div>\r\n                    Music\r\n                </div>\r\n                <div>\r\n                    Video\r\n                </div>\r\n\r\n                <div className={s.takePlace}>FOR TAKE PLACE</div>\r\n                <div className={s.takePlace}>FOR TAKE PLACE</div>\r\n                <div className={s.takePlace}>FOR TAKE PLACE</div>\r\n                <div className={s.takePlace}>FOR TAKE PLACE</div>\r\n                <div className={s.takePlace}>FOR TAKE PLACE</div>\r\n                <div className={s.takePlace}>FOR TAKE PLACE</div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import { useState } from 'react'\r\nimport s from './Hover.module.css'\r\n\r\nconst Hover = ({ base, hovered, style, onClick }) => {\r\n    \r\n    const [clickMode, setClickMode] = useState(false)\r\n\r\n    const mouseOut = () => {\r\n        setTimeout(() => setClickMode(false), 1000)\r\n    }\r\n\r\n    const mouseOver = () => setClickMode(true)\r\n\r\n    return (\r\n        <div className={s.hoverContainer}>\r\n            {\r\n                clickMode ? \r\n                    <span className={style} onClick={onClick} onMouseOut={mouseOut}>\r\n                        {hovered}\r\n                    </span>\r\n                    :\r\n                    <span className={style} onMouseOver={mouseOver}>\r\n                        {base}\r\n                    </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hover\r\n","import s from './Post.module.css'\r\nimport defaultImage from '../../../../../images/user-image.png'\r\nimport Hover from '../../../../common/Hover/Hover'\r\n\r\n\r\nconst Post = ({ iam, photos = {}, deletePost, ...props }) => {\r\n\r\n    const avaSrc = photos.small ? photos.small : defaultImage\r\n\r\n    return (\r\n        <>\r\n            <div className={s.post}>\r\n                <div className={s.centered}>\r\n                    <img src={avaSrc} alt=\"q\" />\r\n                    <div>\r\n                        <span className={s.like}>Like</span> {props.state.likesCount}\r\n                    </div>\r\n                </div>\r\n                <div className={s.messageContainer}>\r\n                    <span className={`${s.message} ${s.centered}`}>\r\n                        {props.state.message}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    iam &&\r\n                    <Hover style={s.delete} onClick={deletePost}\r\n                        base={'Hover over me'}\r\n                        hovered={'Delete Post'}\r\n                    />\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Post;","import s from './Posts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { noErrorRequired, validate500 } from '../../../../scripts/validates';\r\nimport { createField, Textarea } from '../../../common/CustomFields/CustomFields';\r\nimport { useValidation } from '../../../../hooks/useValidation';\r\n\r\nconst Posts = ({ userName = '...', photos, iam = false, addPost, deletePost, resetForm, posts: { posts } }) => {\r\n\r\n    const handleSubmit = ({ post }) => {\r\n        addPost(post)\r\n        resetForm('post')\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.centered}>\r\n                {\r\n                    iam ?\r\n                        <PostForm onSubmit={handleSubmit} />\r\n                        :\r\n                        <span >Posts of {userName} </span>\r\n                }\r\n            </div>\r\n            <div className={`${s.postsContainer} ${s.centered}`}>\r\n                {\r\n                    posts.map((obj) => {\r\n                        const handleDelete = () => {\r\n                            deletePost(obj.id)\r\n                        }\r\n                        return <Post key={obj.id} iam={iam} state={obj} photos={photos} deletePost={handleDelete} />\r\n                    }).reverse()\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n\r\n/*-----------------------------------------------------------------------------------*/\r\n\r\nlet PostForm = props => {\r\n\r\n    const [ postVO,  ] = useValidation(false)\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(Textarea, 'post', 'text', 'Enter your Post', [noErrorRequired, validate500], postVO.setIsValid)}\r\n            <div>\r\n                <button type='submit' disabled={!postVO.isValid} >Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nPostForm = reduxForm({ form: 'post' })(PostForm)\r\n","import s from './Profile.module.css'\r\nimport { connect } from 'react-redux';\r\nimport selecror from '../../../redux/selectors';\r\nimport { actionCreator, thunkCreator } from '../../../redux/profile-reducer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport Posts from './Posts/Posts'\r\nimport { useEffect } from 'react';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router';\r\nimport SplitContent from '../../common/SplitContent/SplitContent';\r\nimport { resetForm } from '../../../redux/app-reducer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    const { authId, getProfileData, getProfileStatus } = props\r\n    const { userId = authId } = props.match.params\r\n\r\n    useEffect(() => {\r\n        getProfileStatus(userId)\r\n        getProfileData(userId)\r\n        console.log('Profile loaded Status and Data')\r\n    }, [authId, userId, getProfileData, getProfileStatus])\r\n\r\n    const publishStatus = status => {\r\n        const { putProfileStatus, resetForm } = props\r\n        putProfileStatus({ status })\r\n        resetForm('status')\r\n    }\r\n\r\n    return (\r\n        <SplitContent colorLeft={true} colorRight={true}\r\n            left={\r\n                <ProfileInfo {...props} publishStatus={publishStatus} />\r\n            }\r\n            right={\r\n                <Posts {...props} iam={ !!authId && userId === authId } />\r\n            } />\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photos: selecror.profile.getPhotos(state),\r\n        userName: selecror.profile.getUserName(state),\r\n        posts: selecror.profile.getPosts(state),\r\n        authId: selecror.auth.getAuthId(state),\r\n        userId: selecror.profile.getUserId(state),\r\n\r\n        data: selecror.profile.getData(state),\r\n        status: selecror.profile.getStatus(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { ...thunkCreator, ...actionCreator.posts, resetForm }),\r\n    withRouter\r\n)(Profile);"],"sourceRoot":""}